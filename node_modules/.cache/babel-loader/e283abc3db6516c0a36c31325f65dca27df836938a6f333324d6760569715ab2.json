{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\git\\\\FakeTube\\\\src\\\\views\\\\components\\\\organisms\\\\SearchResultContent.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ApiFetch from '../../../utils/ApiFetch';\nimport { Grid } from '@material-ui/core';\nimport Thumbnail from '../atoms/Thumbnail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  thumnail: {\n    maxWidth: '360px'\n  }\n}));\nconst SearchResultContent = () => {\n  _s();\n  const classes = useStyles();\n  const {\n    fetchFtThumbnailVideos\n  } = ApiFetch;\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(0);\n  const loader = useRef(null);\n  const [isInitFetch, setIsInitFetch] = useState(true);\n  const [canFetch, setCanFetch] = useState(true);\n  useEffect(() => {\n    const fetchVideoInfo = async () => {\n      try {\n        //var limit = isInitFetch ? 6 : 1;\n        var limit = 1;\n        setIsLoading(true);\n        const newVideo = await fetchFtThumbnailVideos(limit, page, '');\n        setData(prev => [...prev, ...newVideo]);\n        setPage(prev => prev + limit);\n        //if (isInitFetch) { setIsInitFetch(false); }\n        if (newVideo.length < limit) {\n          setCanFetch(false);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n      setIsLoading(false);\n    };\n    if (!isLoading && canFetch) {\n      fetchVideoInfo();\n    }\n  }, [data, isLoading]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: data.map(video => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.thumnail,\n              children: /*#__PURE__*/_jsxDEV(Thumbnail, {\n                vid: video.vid,\n                customRadius: 10\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: video.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, video.videoId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(SearchResultContent, \"ALQdWumT2svR/RO0sr/SpmToIwg=\", false, function () {\n  return [useStyles];\n});\n_c = SearchResultContent;\nexport default SearchResultContent;\nvar _c;\n$RefreshReg$(_c, \"SearchResultContent\");","map":{"version":3,"names":["React","useState","useRef","useEffect","makeStyles","ApiFetch","Grid","Thumbnail","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","theme","thumnail","maxWidth","SearchResultContent","_s","classes","fetchFtThumbnailVideos","isLoading","setIsLoading","data","setData","page","setPage","loader","isInitFetch","setIsInitFetch","canFetch","setCanFetch","fetchVideoInfo","limit","newVideo","prev","length","error","console","children","container","spacing","map","video","item","xs","className","vid","customRadius","fileName","_jsxFileName","lineNumber","columnNumber","title","videoId","_c","$RefreshReg$"],"sources":["C:/Users/user/git/FakeTube/src/views/components/organisms/SearchResultContent.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport ApiFetch from '../../../utils/ApiFetch';\r\nimport { FtThumbnailVideo } from '../../../utils/DataType';\r\nimport { Grid } from '@material-ui/core';\r\nimport HomeVideoCard from '../atoms/HomeVideoCard';\r\nimport Thumbnail from '../atoms/Thumbnail';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  thumnail: {\r\n    maxWidth: '360px',\r\n  },\r\n}));\r\n\r\nconst SearchResultContent: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { fetchFtThumbnailVideos } = ApiFetch;\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [data, setData] = useState<FtThumbnailVideo[]>([]);\r\n  const [page, setPage] = useState<number>(0);\r\n  const loader = useRef<HTMLDivElement | null>(null);\r\n  const [isInitFetch, setIsInitFetch] = useState<boolean>(true);\r\n  const [canFetch, setCanFetch] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    const fetchVideoInfo = async () => {\r\n      try {\r\n        //var limit = isInitFetch ? 6 : 1;\r\n        var limit = 1;\r\n        setIsLoading(true);\r\n        const newVideo = await fetchFtThumbnailVideos(limit, page, '');\r\n        setData((prev) => [...prev, ...newVideo]);\r\n        setPage((prev) => prev + limit);\r\n        //if (isInitFetch) { setIsInitFetch(false); }\r\n        if (newVideo.length < limit) { setCanFetch(false); }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    if (!isLoading && canFetch) {\r\n      fetchVideoInfo();\r\n    }\r\n\r\n  }, [data, isLoading]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        {data.map((video) => (\r\n          <Grid item key={video.videoId} xs={12}>\r\n            <Grid container>\r\n              <Grid item xs={4}>\r\n                <div className={classes.thumnail}>\r\n                  <Thumbnail vid={video.vid} customRadius={10} />\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {video.title}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchResultContent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}