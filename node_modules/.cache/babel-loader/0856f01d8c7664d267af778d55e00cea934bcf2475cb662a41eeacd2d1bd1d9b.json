{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\git\\\\FakeTube\\\\src\\\\views\\\\components\\\\atoms\\\\Thumbnail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CardMedia } from '@material-ui/core';\nimport ApiFetch from '../../../utils/ApiFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  imageStyle: {\n    backgroundColor: 'transparent',\n    border: 1,\n    transition: 'all 0.3s ease-in-out',\n    '&': {\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover'\n    },\n    '&:hover': {\n      filter: 'brightness(60%)'\n    }\n  }\n}));\nconst Thumbnail = _ref => {\n  _s();\n  let {\n    vid,\n    customRadius\n  } = _ref;\n  const classes = useStyles();\n  const {\n    fetchFtThumbnailImg\n  } = ApiFetch;\n  const navigate = useNavigate();\n\n  // サムネイル画像クリック時の挙動\n  const handleClick = () => {\n    navigate('/watch?v=' + vid, {\n      state: {\n        v: vid\n      }\n    });\n  };\n\n  // サムネイル画像の取得\n  const [thumnailUrl, setThumnailUrl] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const loadData = async () => {\n      setIsLoading(true);\n      try {\n        // サムネイル\n        const thumnailImg = fetchFtThumbnailImg(vid, 'false');\n        const imgurl = URL.createObjectURL(await thumnailImg);\n        setThumnailUrl(imgurl);\n        // ホバー時gif\n        const thumnailGif = fetchFtThumbnailImg(vid, 'true');\n        const gifurl = URL.createObjectURL(await thumnailGif);\n        setImageUrl(gifurl);\n      } catch (error) {\n        console.error(error);\n      }\n      setIsLoading(false);\n    };\n    loadData();\n  }, [vid, fetchFtThumbnailImg]);\n\n  // ホバー時のアニメーション\n  const [isHovering, setIsHovering] = useState(false);\n  const [borderRadius, setBorderRadius] = useState(customRadius);\n  const handleMouseEnter = () => {\n    setIsHovering(true);\n    setBorderRadius(0);\n  };\n  const handleMouseLeave = () => {\n    setIsHovering(false);\n    setBorderRadius(customRadius);\n  };\n  const cardMediaStyle = {\n    borderRadius: `${borderRadius}px`\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      image: isHovering ? imageUrl : thumnailUrl,\n      alt: \"\",\n      onClick: handleClick,\n      className: classes.imageStyle,\n      style: cardMediaStyle,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"loading.gif\",\n      width: \"30\",\n      height: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n_s(Thumbnail, \"Lnj2LqlNnnexxH1A/P+sNdtMr7Y=\", false, function () {\n  return [useStyles, useNavigate];\n});\n_c = Thumbnail;\nexport default Thumbnail;\nvar _c;\n$RefreshReg$(_c, \"Thumbnail\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","makeStyles","CardMedia","ApiFetch","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","theme","imageStyle","backgroundColor","border","transition","width","height","objectFit","filter","Thumbnail","_ref","_s","vid","customRadius","classes","fetchFtThumbnailImg","navigate","handleClick","state","v","thumnailUrl","setThumnailUrl","imageUrl","setImageUrl","isLoading","setIsLoading","loadData","thumnailImg","imgurl","URL","createObjectURL","thumnailGif","gifurl","error","console","isHovering","setIsHovering","borderRadius","setBorderRadius","handleMouseEnter","handleMouseLeave","cardMediaStyle","children","component","image","alt","onClick","className","style","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["C:/Users/user/git/FakeTube/src/views/components/atoms/Thumbnail.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CardMedia } from '@material-ui/core';\r\nimport ApiFetch from '../../../utils/ApiFetch';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  imageStyle: {\r\n    backgroundColor: 'transparent',\r\n    border: 1,\r\n    transition: 'all 0.3s ease-in-out',\r\n    '&': {\r\n      width: '100%',\r\n      height: '100%',\r\n      objectFit: 'cover',\r\n    },\r\n    '&:hover': {\r\n      filter: 'brightness(60%)',\r\n    },\r\n  },\r\n}));\r\n\r\ntype ThumnailId = {\r\n  vid: string;\r\n  customRadius: number;\r\n}\r\n\r\nconst Thumbnail: React.FC<ThumnailId> = ({\r\n  vid, customRadius\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const { fetchFtThumbnailImg } = ApiFetch;\r\n  const navigate = useNavigate();\r\n\r\n  // サムネイル画像クリック時の挙動\r\n  const handleClick = () => {\r\n    navigate('/watch?v=' + vid, { state: { v: vid }});\r\n  }\r\n\r\n  // サムネイル画像の取得\r\n  const [thumnailUrl, setThumnailUrl] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        // サムネイル\r\n        const thumnailImg = fetchFtThumbnailImg(vid, 'false');\r\n        const imgurl = URL.createObjectURL(await thumnailImg);\r\n        setThumnailUrl(imgurl);\r\n        // ホバー時gif\r\n        const thumnailGif = fetchFtThumbnailImg(vid, 'true');\r\n        const gifurl = URL.createObjectURL(await thumnailGif);\r\n        setImageUrl(gifurl);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    loadData();\r\n  }, [vid, fetchFtThumbnailImg]);\r\n\r\n\r\n  // ホバー時のアニメーション\r\n  const [isHovering, setIsHovering] = useState(false);\r\n  const [borderRadius, setBorderRadius] = useState<number>(customRadius);\r\n  const handleMouseEnter = () => {\r\n    setIsHovering(true);\r\n    setBorderRadius(0);\r\n  };\r\n  const handleMouseLeave = () => {\r\n    setIsHovering(false);\r\n    setBorderRadius(customRadius);\r\n  };\r\n  const cardMediaStyle = { borderRadius: `${borderRadius}px` }\r\n\r\n  return (\r\n    <>\r\n      <CardMedia \r\n        component='img' \r\n        image={isHovering ? imageUrl : thumnailUrl} \r\n        alt=''\r\n        onClick={handleClick} \r\n        className={classes.imageStyle}\r\n        style={cardMediaStyle}\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n        />\r\n        {isLoading && <img src='loading.gif' width='30' height='30' />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Thumbnail;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}